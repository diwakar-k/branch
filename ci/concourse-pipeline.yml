# resource_types:
# - name: git-branches
#   type: docker-image
#   source:
#     repository: vito/git-branches-resource

# resources:
#   - name: demo
#     type: git-branches
#     source:
#       uri: https://github.com/diwakar-k/branch.git
# jobs:
#   - name: "test-pipeline"
#     public: false
#     plan:
#       - get: demo
#         trigger: true
#       - task: check
#         config:
#           platform: linux
#           image_resource:
#             type: docker-image
#             source:
#               repository: teliaoss/concourse-fly
#               tag: latest
#           inputs:
#           - name: demo
#           run:
#             path: sh
#             args:
#             - -exc
#             - |
#               cd demo 
#               ls
#               export NEW_VERSIONS=$(cat branches)
#               export OLD_VERSIONS=$(cat removed)
#               fly -t tutorial login -c http://54.242.191.180:8080 -u test -p test
#               fly -t tutorial sync
#               for version in $NEW_VERSIONS; do
#                 sed "s/___BRANCH___/$version/g" demo/.ci/pipeline-demo.tmpl > .ci/pipeline-app.result
#                 echo "Create pipeline branch $version"
#                 fly -t your-concourse sp -n -p app-$version -c demo/.ci/pipeline-app.result
#                 echo "Unpause pipeline branch $version"
#                 fly -t your-concourse up -p app-$version
#               done
        
#       #   file: demo/build/test.yml


resources:
  - name: repo
    type: git
    source:
      # uri: https://github.com/diwakar-k/cancourse_cicd.git
      uri: https://github.com/diwakar-k/branch.git




 


  # - name: ecr-docker-reg
  #   type: docker-image
  #   source:
  #     repository: 657757981076.dkr.ecr.us-east-1.amazonaws.com/test
  #     aws_access_key_id: {{aws-access-key}}
  #     aws_secret_access_key: {{aws-secret-key}}
      # Name of the bucket in S3 account
      # bucket: rishi-demo
      # region_name: ap-south-1
      # filename of the application to read/write in S3 (check S3 resource documentation for parameters)
      # AWS Credentials are passed in command line on set-pipeline. Concourse can also use an external vault system to store credentials
      # aws_access_key_id: {{aws-access-key}}
      # aws_secret_access_key: {{aws-secret-key}}
      # repository: 657757981076.dkr.ecr.us-east-1.amazonaws.com/test
  # - name: repo-docker-repository
  #   type: docker-image
  #   source:
  #     email: ((docker-hub-email))
  #     username: ((docker-hub-username))
  #     password: ((docker-hub-password))
  #     repository: ((docker-hub-username))/((docker-hub-repo-name))

  # - name: kubectl
  #   type: kubectl-resource
  #   source:
  #     api_server_uri: ((server))
  #     namespace: ((namespace))
  #     certificate_authority_data: ((cad))
  #     token: ((token))

jobs:
  # - name: test
  #   public: true

  #   plan:
  #     - get: repo
  #       trigger: true
  #     - task: mvn-test
  #       file: "repo/concourse_ci/tasks/maven-test.yml"

  # - name: test
  #   public: true
  #   serial: true
  #   plan:
  #     - get: repo
  #       trigger: true
  #       # passed: [test]
  #     - task: mvn-package
  #       file: "repo/concourse_ci/tasks/maven-package.yml"
  #     - put: ecr-docker-reg
  #       params:
  #         build: repo
  #         dockerfile: repo/Dockerfile
    
  - name: test
    public: true
    serial: true
    plan:
      - get: repo
        trigger: true
        


  - name: build
    public: true
    serial: true
    plan:
      - get: repo
        trigger: false
        passed: [test]
      - task: check
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: teliaoss/concourse-fly
              tag: latest
          inputs:
          - name: repo
          run:
            path: sh
            args:
            - -exc  
            - |
              ls

      
  # - name: deploy
  #   public: true
  #   serial: true
  #   plan:
  #     - get: repo
  #       trigger: false
  #       passed: [package]

  #     - put: kubectl
  #       params:
  #         file: "repo/spring-boot-deploy.yaml"